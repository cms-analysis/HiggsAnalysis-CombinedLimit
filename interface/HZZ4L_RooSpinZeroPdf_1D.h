/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef HZZ4L_ROOSPINZEROPDF_1D
#define HZZ4L_ROOSPINZEROPDF_1D

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooRealVar.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TH3F.h"
#include "TH1.h"
#include "RooDataHist.h"
#include "RooHistFunc.h"
using namespace RooFit;

class HZZ4L_RooSpinZeroPdf_1D : public RooAbsPdf {
protected:

  RooRealProxy kd ;
//  RooRealProxy kdint ;
//  RooRealProxy ksmd ;
  RooRealProxy fai ;
  RooListProxy _coefList ;  //  List of funcficients
  TIterator* _coefIter ;    //! Iterator over funcficient lis
  Double_t evaluate() const ;
public:
  HZZ4L_RooSpinZeroPdf_1D() {} ; 
  HZZ4L_RooSpinZeroPdf_1D(const char *name, const char *title,
		       RooAbsReal& _kd,
//		       RooAbsReal& _kdint,
//					 RooAbsReal& _ksmd,
		       RooAbsReal& _fai,
			const RooArgList& inCoefList);
		    
  HZZ4L_RooSpinZeroPdf_1D(const HZZ4L_RooSpinZeroPdf_1D& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new HZZ4L_RooSpinZeroPdf_1D(*this,newname); }
  inline virtual ~HZZ4L_RooSpinZeroPdf_1D() {}
  
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;
  const RooArgList& coefList() const { return _coefList ; }

private:

  ClassDef(HZZ4L_RooSpinZeroPdf_1D,1) // Your description goes here...
};
 
#endif
